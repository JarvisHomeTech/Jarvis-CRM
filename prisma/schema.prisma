generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum LeadSource {
  FB_LEAD_ADS
  WEBSITE
  MANUAL
  WHATSAPP
  TELEGRAM
  REFERRAL
}

enum LeadStatus {
  NEW
  QUALIFIED
  QUOTE_SENT
  SCHEDULED
  DELIVERED
  INSTALLED
  PAID
  SUPPORT
  LOST
}

enum OrderType {
  DELIVERY
  INSTALLATION
}

enum Currency {
  GEL
  USD
  EUR
}

enum UserRole {
  OWNER
  MANAGER
  SALES
  TECHNICIAN
  ACCOUNTANT
}

model Organization {
  id        String    @id @default(cuid())
  name      String
  createdAt DateTime  @default(now())
  users     User[]
  contacts  Contact[]
  leads     Lead[]
  comments  Comment[]
  orders    Order[]
}

model User {
  id             String       @id @default(cuid())
  email          String       @unique
  password       String
  name           String
  role           UserRole     @default(SALES)
  organizationId String
  organization   Organization @relation(fields: [organizationId], references: [id])
  createdAt      DateTime     @default(now())
  Lead           Lead[]
  Comment        Comment[]
}

model Contact {
  id             String       @id @default(cuid())
  organizationId String
  organization   Organization @relation(fields: [organizationId], references: [id])
  fullName       String?
  phone          String?
  email          String?
  address        String?
  notes          String?
  createdAt      DateTime     @default(now())
  leads          Lead[]
}

model Lead {
  id             String       @id @default(cuid())
  organizationId String
  organization   Organization @relation(fields: [organizationId], references: [id])
  title          String
  source         LeadSource   @default(MANUAL)
  status         LeadStatus   @default(NEW)
  contactId      String?
  contact        Contact?     @relation(fields: [contactId], references: [id])
  ownerId        String?
  owner          User?        @relation(fields: [ownerId], references: [id])
  meta           Json?
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  comments       Comment[]
  order          Order?
}

model Comment {
  id             String       @id @default(cuid())
  organizationId String
  organization   Organization @relation(fields: [organizationId], references: [id])
  leadId         String
  lead           Lead         @relation(fields: [leadId], references: [id])
  authorId       String?
  author         User?        @relation(fields: [authorId], references: [id])
  content        String
  createdAt      DateTime     @default(now())
}

model Order {
  id             String       @id @default(cuid())
  organizationId String
  organization   Organization @relation(fields: [organizationId], references: [id])
  leadId         String       @unique
  lead           Lead         @relation(fields: [leadId], references: [id])
  type           OrderType
  products       Json?
  appointment    DateTime?
  technician     String?
  address        String?
  amount         Decimal?     @db.Decimal(12, 2)
  currency       Currency     @default(GEL)
  status         String?
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
}
